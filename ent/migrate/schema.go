// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OauthColumns holds the columns for the "oauth" table.
	OauthColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "issuer", Type: field.TypeEnum, Enums: []string{"google", "github"}},
		{Name: "subject", Type: field.TypeString},
		{Name: "user_auth", Type: field.TypeInt},
	}
	// OauthTable holds the schema information for the "oauth" table.
	OauthTable = &schema.Table{
		Name:       "oauth",
		Columns:    OauthColumns,
		PrimaryKey: []*schema.Column{OauthColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "oauth_users_auth",
				Columns:    []*schema.Column{OauthColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "oauth_issuer_subject",
				Unique:  true,
				Columns: []*schema.Column{OauthColumns[1], OauthColumns[2]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OauthTable,
		UsersTable,
	}
)

func init() {
	OauthTable.ForeignKeys[0].RefTable = UsersTable
	OauthTable.Annotation = &entsql.Annotation{
		Table: "oauth",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
}
