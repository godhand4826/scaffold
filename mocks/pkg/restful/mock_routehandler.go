// Code generated by mockery v2.46.2. DO NOT EDIT.

package mockrestful

import (
	chi "github.com/go-chi/chi/v5"
	mock "github.com/stretchr/testify/mock"
)

// MockRouteHandler is an autogenerated mock type for the RouteHandler type
type MockRouteHandler struct {
	mock.Mock
}

type MockRouteHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRouteHandler) EXPECT() *MockRouteHandler_Expecter {
	return &MockRouteHandler_Expecter{mock: &_m.Mock}
}

// AttachOn provides a mock function with given fields: _a0
func (_m *MockRouteHandler) AttachOn(_a0 chi.Router) {
	_m.Called(_a0)
}

// MockRouteHandler_AttachOn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AttachOn'
type MockRouteHandler_AttachOn_Call struct {
	*mock.Call
}

// AttachOn is a helper method to define mock.On call
//   - _a0 chi.Router
func (_e *MockRouteHandler_Expecter) AttachOn(_a0 interface{}) *MockRouteHandler_AttachOn_Call {
	return &MockRouteHandler_AttachOn_Call{Call: _e.mock.On("AttachOn", _a0)}
}

func (_c *MockRouteHandler_AttachOn_Call) Run(run func(_a0 chi.Router)) *MockRouteHandler_AttachOn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(chi.Router))
	})
	return _c
}

func (_c *MockRouteHandler_AttachOn_Call) Return() *MockRouteHandler_AttachOn_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRouteHandler_AttachOn_Call) RunAndReturn(run func(chi.Router)) *MockRouteHandler_AttachOn_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRouteHandler creates a new instance of MockRouteHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRouteHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRouteHandler {
	mock := &MockRouteHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
